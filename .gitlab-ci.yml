.base:
  except:
  - /^(wip|test).*$/

variables:
  CONTAINER_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG


stages:
  - test
  - build
  - staging
  - integrationTest
  - deploy

clean:
  extends: .base
  stage: build
  script:
  - ./gradlew clean

test:
  extends: .base
  stage: test
  script:
  - ./gradlew clean
  - ./gradlew test -i
  artifacts:
    when: always
    reports:
      junit: [build/test-results/test/TEST-*.xml]

lint:
  extends: .base
  stage: test
  script:
    - ./gradlew ktlintCheck
  allow_failure: true

war:
  extends: .base
  stage: build
  script:
    - ./gradlew war
    - cp ./build/libs/tepid*.war ~/tepid.war
  artifacts:
    when: always
    paths:
      - ./build/libs/tepid*.war

build docker:
  extends: .base
  stage: build
  tags:
    - docker-build
  before_script:
    - sudo -g docker docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - sudo -g docker docker build -t $CONTAINER_IMAGE -t $CI_REGISTRY_IMAGE:test .
    - sudo -g docker docker push $CI_REGISTRY_IMAGE

deploy test:
  extends: .base
  stage: staging
  tags:
    - docker-build
  script:
    - /deploy.sh tepid test

integrationTest:
  extends: .base
  stage: integrationTest
  script:
    - ./gradlew clean
    - ./gradlew test -i
    - ./gradlew integrationTest -i
  artifacts:
    when: always
    reports:
      junit: [build/test-results/integrationTest/TEST-*.xml]

deploy:
  extends: .base
  stage: deploy
  tags:
    - docker
  only:
    - dev
    - master
  before_script:
    - sudo -g docker docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - cd $COMPOSE_DIR
    - sudo -g docker docker-compose up -d

